%%%%%%%%%%%%%%%%%% Phone_Call_Process.m %%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%       注意按钮与函数之间存在一一对应关系   %%%%%%%%%%%%%%%%%%%
%%%%%       在用源代码的时候只能看函数内容       %%%%%%%%%%%%%%%%
%%%%%             切不可直接使用               %%%%%%%%%%%%%
function varargout = Phone_Call_Process(varargin)
% PHONE_CALL_PROCESS MATLAB code for Phone_Call_Process.fig
%      PHONE_CALL_PROCESS, by itself, creates a new PHONE_CALL_PROCESS or raises the existing
%      singleton*.
%
%      H = PHONE_CALL_PROCESS returns the handle to a new PHONE_CALL_PROCESS or the handle to
%      the existing singleton*.
%
%      PHONE_CALL_PROCESS('CALLBACK',hObject,eventData,handles,...) calls the local
%      function named CALLBACK in PHONE_CALL_PROCESS.M with the given input arguments.
%
%      PHONE_CALL_PROCESS('Property','Value',...) creates a new PHONE_CALL_PROCESS or raises the
%      existing singleton*.  Starting from the left, property value pairs are
%      applied to the GUI before Phone_Call_Process_OpeningFcn gets called.  An
%      unrecognized property name or invalid value makes property application
%      stop.  All inputs are passed to Phone_Call_Process_OpeningFcn via varargin.
%
%      *See GUI Options on GUIDE's Tools menu.  Choose "GUI allows only one
%      instance to run (singleton)".
%
% See also: GUIDE, GUIDATA, GUIHANDLES

% Edit the above text to modify the response to help Phone_Call_Process

% Last Modified by GUIDE v2.5 05-Jun-2020 17:18:59

% Begin initialization code - DO NOT EDIT
gui_Singleton = 1;
gui_State = struct('gui_Name',       mfilename, ...
                   'gui_Singleton',  gui_Singleton, ...
                   'gui_OpeningFcn', @Phone_Call_Process_OpeningFcn, ...
                   'gui_OutputFcn',  @Phone_Call_Process_OutputFcn, ...
                   'gui_LayoutFcn',  [] , ...
                   'gui_Callback',   []);
if nargin && ischar(varargin{1})
    gui_State.gui_Callback = str2func(varargin{1});
end

if nargout
    [varargout{1:nargout}] = gui_mainfcn(gui_State, varargin{:});
else
    gui_mainfcn(gui_State, varargin{:});
end
% End initialization code - DO NOT EDIT


% --- Executes just before Phone_Call_Process is made visible.
function Phone_Call_Process_OpeningFcn(hObject, eventdata, handles, varargin)
% This function has no output args, see OutputFcn.
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
% varargin   command line arguments to Phone_Call_Process (see VARARGIN)

% Choose default command line output for Phone_Call_Process
handles.output = hObject;
% Update handles structure
guidata(hObject, handles);

% UIWAIT makes Phone_Call_Process wait for user response (see UIRESUME)
% uiwait(handles.figure1);


% --- Outputs from this function are returned to the command line.
function varargout = Phone_Call_Process_OutputFcn(hObject, eventdata, handles) 
% varargout  cell array for returning output args (see VARARGOUT);
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Get default command line output from handles structure
varargout{1} = handles.output;


% --- Executes on button press in pushbutton1.
function pushbutton1_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
n=[1:1000]; % 每个数字 1000 个采样点表示
d0=sin(0.5343*n)+sin(0.9268*n); % 对应行频列频叠加
n0=strcat(get(handles.edit1,'string'),'1'); % 获取数字号码
set(handles.edit1,'string',n0); % 显示号码
space=zeros(1,100); %100 个 0 模拟静音信号
global NUM
phone=[NUM,d0];
NUM=[phone,space]; % 存储连续的拨号音信号
sound(d0,8192); % 产生拨号音


% --- Executes on button press in pushbutton2.
function pushbutton2_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton2 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
n=[1:1000]; % 每个数字 1000 个采样点表示
d0=sin(0.5343*n)+sin(1.0247*n); % 对应行频列频叠加
n0=strcat(get(handles.edit1,'string'),'2'); % 获取数字号码
set(handles.edit1,'string',n0); % 显示号码
space=zeros(1,100); %100 个 0 模拟静音信号
global NUM
phone=[NUM,d0];
NUM=[phone,space]; % 存储连续的拨号音信号
sound(d0,8192); % 产生拨号音


% --- Executes on button press in pushbutton3.
function pushbutton3_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton3 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
n=[1:1000]; % 每个数字 1000 个采样点表示
d0=sin(0.5343*n)+sin(1.1322*n); % 对应行频列频叠加
n0=strcat(get(handles.edit1,'string'),'3'); % 获取数字号码
set(handles.edit1,'string',n0); % 显示号码
space=zeros(1,100); %100 个 0 模拟静音信号
global NUM
phone=[NUM,d0];
NUM=[phone,space]; % 存储连续的拨号音信号
sound(d0,8192); % 产生拨号音


% --- Executes on button press in pushbutton4.
function pushbutton4_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton4 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
n=[1:1000]; % 每个数字 1000 个采样点表示
d0=sin(0.5902*n)+sin(0.9268*n); % 对应行频列频叠加
n0=strcat(get(handles.edit1,'string'),'4'); % 获取数字号码
set(handles.edit1,'string',n0); % 显示号码
space=zeros(1,100); %100 个 0 模拟静音信号
global NUM
phone=[NUM,d0];
NUM=[phone,space]; % 存储连续的拨号音信号
sound(d0,8192); % 产生拨号音


% --- Executes on button press in pushbutton5.
function pushbutton5_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton5 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
n=[1:1000]; % 每个数字 1000 个采样点表示
d0=sin(0.5902*n)+sin(1.0247*n); % 对应行频列频叠加
n0=strcat(get(handles.edit1,'string'),'5'); % 获取数字号码
set(handles.edit1,'string',n0); % 显示号码
space=zeros(1,100); %100 个 0 模拟静音信号
global NUM
phone=[NUM,d0];
NUM=[phone,space]; % 存储连续的拨号音信号
sound(d0,8192); % 产生拨号音


% --- Executes on button press in pushbutton6.
function pushbutton6_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton6 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
n=[1:1000]; % 每个数字 1000 个采样点表示
d0=sin(0.5902*n)+sin(1.1322*n); % 对应行频列频叠加
n0=strcat(get(handles.edit1,'string'),'6'); % 获取数字号码
set(handles.edit1,'string',n0); % 显示号码
space=zeros(1,100); %100 个 0 模拟静音信号
global NUM
phone=[NUM,d0];
NUM=[phone,space]; % 存储连续的拨号音信号
sound(d0,8192); % 产生拨号音


% --- Executes on button press in pushbutton7.
function pushbutton7_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton7 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
n=[1:1000]; % 每个数字 1000 个采样点表示
d0=sin(0.6531*n)+sin(0.9268*n); % 对应行频列频叠加
n0=strcat(get(handles.edit1,'string'),'7'); % 获取数字号码
set(handles.edit1,'string',n0); % 显示号码
space=zeros(1,100); %100 个 0 模拟静音信号
global NUM
phone=[NUM,d0];
NUM=[phone,space]; % 存储连续的拨号音信号
sound(d0,8192); % 产生拨号音


% --- Executes on button press in pushbutton8.
function pushbutton8_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton8 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
n=[1:1000]; % 每个数字 1000 个采样点表示
d0=sin(0.6531*n)+sin(1.0247*n); % 对应行频列频叠加
n0=strcat(get(handles.edit1,'string'),'8'); % 获取数字号码
set(handles.edit1,'string',n0); % 显示号码
space=zeros(1,100); %100 个 0 模拟静音信号
global NUM
phone=[NUM,d0];
NUM=[phone,space]; % 存储连续的拨号音信号
sound(d0,8192); % 产生拨号音


% --- Executes on button press in pushbutton9.
function pushbutton9_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton9 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
n=[1:1000]; % 每个数字 1000 个采样点表示
d0=sin(0.6531*n)+sin(1.1322*n);% 对应行频列频叠加
n0=strcat(get(handles.edit1,'string'),'9'); % 获取数字号码
set(handles.edit1,'string',n0); % 显示号码
space=zeros(1,100); %100 个 0 模拟静音信号
global NUM
phone=[NUM,d0];
NUM=[phone,space]; % 存储连续的拨号音信号
sound(d0,8192); % 产生拨号音


% --- Executes on button press in pushbutton10.
function pushbutton10_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton10 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
n=[1:1000];
num=get(handles.edit1,'string');
l=length(num);
n11=strrep(num,num,num(1:l-1));
d11=sin(0.7217*n)+sin(0.9268*n);
set(handles.edit1,'string',n11);
global NUM
L=length(NUM);
NUM=NUM(1:L-1100);
sound(d11,8192);


% --- Executes on button press in pushbutton11.
function pushbutton11_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton11 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
n = [1:1000]; % 每个数字 1000 个采样点表示
d0 = sin(0.7217*n) + sin(1.0247*n); % 对应行频列频叠加
n0 = strcat(get(handles.edit1,'string'),'0'); % 获取数字号码
set(handles.edit1,'string',n0); % 显示号码
space = zeros(1,100); %100 个 0 模拟静音信号
global NUM
phone = [NUM,d0];
NUM = [phone,space]; % 存储连续的拨号音信号
sound(d0,8192); % 产生拨号音


% --- Executes on button press in pushbutton12.
function pushbutton12_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton12 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
n=[1:1000]; % 每个数字 1000 个采样点表示
d0=sin(2*pi*697/8192*n)+sin(2*pi*163/8192*n); % 对应行频列频叠加
edit1_s=get(handles.edit1,'string');
number1=get(handles.pushbutton12,'string');
set(handles.edit1,'string',[edit1_s number1]);
global NUM
global NUM1
NUM1 = NUM;
sound(d0,8192); % 产生拨号音



function edit1_Callback(hObject, eventdata, handles)
% hObject    handle to edit1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit1 as text
%        str2double(get(hObject,'String')) returns contents of edit1 as a double


% --- Executes during object creation, after setting all properties.
function edit1_CreateFcn(hObject, eventdata, handles)
% hObject    handle to edit1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function edit2_Callback(hObject, eventdata, handles)
% hObject    handle to edit2 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit2 as text
%        str2double(get(hObject,'String')) returns contents of edit2 as a double


% --- Executes during object creation, after setting all properties.
function edit2_CreateFcn(hObject, eventdata, handles)
% hObject    handle to edit2 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


% --- Executes on button press in pushbutton13.
function pushbutton13_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton13 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
set(handles.edit1,'string',[]);
set(handles.edit2,'string',[]);
global NUM;
NUM = [0];
global string;
string = '';
clear all;
n=0:1000;
n0=sin(2*pi*n*942/8192)+sin(2*pi*n*633/8192);
sound(n0,8192); 


% --- Executes on button press in pushbutton15.
function pushbutton15_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton15 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
global NUM1;
L=length(NUM1);
sound(NUM1,8192);
n=L/1100;
number='';
for i=1:n
    j=(i-1)*1100+1;
    d=NUM1(j:j+999); % 截取出每个数字
    f=fft(d,2048); % 以 N=2048 作 FFT 变换
    a=abs(f);
    p=a.*a/10000; % 计算功率谱
    f = (0:2047)*8192/2048;
    figure(2);
    subplot(6,2,i);
    plot(f, a);         %画出频谱图
    xlim([650,1500])    %控制显示范围
    xlabel('Frenquency/Hz');
    ylabel('Amp');grid on;
    num(1)=find(p(1:250)==max(p(1:250))); % 找行频
    num(2)=300+find(p(300:380)==max(p(300:380))); % 找列频
    if (num(1) < 180) row=1; % 确定行数
    elseif (num(1) < 200) row=2;
    elseif (num(1) < 220) row=3;
    else row=4;
    end
    if (num(2) < 320) column=1; % 确定列数
    elseif (num(2) < 340) column=2;
    else column=3;
    end
    z=[row,column]; % 确定数字
    if z==[4,2] tel=0;
    elseif z==[1,1] tel=1;
    elseif z==[1,2] tel=2;
    elseif z==[1,3] tel=3;
    elseif z==[2,1] tel=4;
    elseif z==[2,2] tel=5;
    elseif z==[2,3] tel=6;
    elseif z==[3,1] tel=7;
    elseif z==[3,2] tel=8;
    elseif z==[3,3] tel=9;
    end
    t(i)=tel;
    c=strcat(number,int2str(tel));
    number=c;
    i=i+1;
end
set(handles.edit2,'string',number);
